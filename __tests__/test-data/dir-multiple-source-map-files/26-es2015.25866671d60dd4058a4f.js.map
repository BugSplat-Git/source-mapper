{"version":3,"sources":["webpack:///src/app/layout/app-layout/services/app-layout-facade/app-layout-facade.service.ts","webpack:///src/app/layout/app-layout/components/subscription-alert/subscription-alert.component.html","webpack:///src/app/layout/app-layout/components/subscription-alert/subscription-alert.component.ts","webpack:///src/app/layout/app-layout/components/trial-countdown/trial-countdown.component.ts","webpack:///src/app/layout/app-layout/components/trial-countdown/trial-countdown.component.html","webpack:///src/app/layout/app-layout/app-layout.component.html","webpack:///src/app/layout/app-layout/app-layout.component.ts","webpack:///src/app/layout/app-layout/app-layout.module.ts","webpack:///node_modules/@meltwater/coerce/cjs/index.js","webpack:///src/app/common/services/subscription/license-type.ts","webpack:///node_modules/rxjs/_esm2015/internal/operators/shareReplay.js","webpack:///node_modules/argument-contracts/esm/index.js","webpack:///src/app/common/services/subscription/subscription-api-response.ts","webpack:///src/app/common/services/title/title.service.ts","webpack:///src/app/common/services/subscription/subscription.service.ts"],"names":["EMPTY_SUBSCRIPTION_OPTIONS","licenseType","licenseLockout","licenseLimitExceeded","trialDaysRemaining","licenseDaysTillLockout","licensedDatabaseLimitExceeded","licensedUserLimitExceeded","licensedVolume30DayLimitExceeded","licensedVolume365DayLimitExceeded","AppLayoutFacadeService","_authService","_davService","_errorHandler","_intercomService","_router","_screenRecordingService","_subscriptionService","_subscriptionUpdatedService","_titleService","this","_killAppLayoutSubject","Subject","_viewModel$","user","getUserFromLocalStorage","email","startChat","startRecording","database$","from","selectionUpdated","pipe","switchMap","o","map","event","database","status$","combineLatest","refreshSubscription$","getSubscriptionStatus","name","startWith","shareReplay","takeUntil","catchError","error","sendBugSplatIfNot401","of","navigationEnd$","events","filter","lockoutRedirect$","tap","status","isIgnoredRoute","url","navigate","getAccountRoute","upgradeBaseRoute","accountRoute$","createAppRoute$","accountBaseRoute","crashesRoute$","allCrashBaseRoute","companyRoute$","companyBaseRoute","dashboardRoute$","dashboardBaseRoute","optionsRoute$","optionsBaseRoute","summaryRoute$","summaryBaseRoute","symbolsRoute$","symbolsBaseRoute","usersRoute$","usersBaseRoute","versionsRoute$","versionsRoute","passwordRoute$","passwordRoute","message$","createUpgradeMessage","restrictedMenu$","freeTrialDetails$","isFreeTrial","Trial","routes$","accountRoute","crashesRoute","companyRoute","dashboardRoute","optionsRoute","summaryRoute","symbolsRoute","usersRoute","message","restrictedMenu","restricted$","userAccessRights","Restricted","title$","routes","restricted","title","freeTrialDetails","shutdown","location","href","URL","environment","production","baseUrl","update","next","route","routerLink","queryParams","isUnauthorizedError","handleError","isUsersPage","indexOf","isAccountPage","isUpgradePage","isCompanyDetailsPage","isOptionsPage","isPaymentsPage","paymentBaseRoute","chat","boot","recording","w","window","start","luckyOrangeSiteId","SubscriptionAlertComponent","accountRouterLink","TrialCountdownComponent","upgradeLink","value","AppLayoutComponent","_appLayoutFacadeService","_title","navbarCollapsed","_viewModelSubscription","viewModel$","subscribe","viewModel","unsubscribe","collapseNavbar","logout","onRouterOutletActivate","AppLayoutModule","forChild","path","component","children","adminBaseRoute","canActivate","loadChildren","then","m","AdminModule","AccountModule","redirectTo","CompanyDetailsModule","DashboardModule","crashBaseRoute","CrashDetailsModule","keyCrashBaseRoute","KeyCrashModule","AllCrashModule","SummaryModule","UsersModule","SymbolsModule","symbolDetailsBaseRoute","SymbolDetailsModule","VersionsModule","OptionsModule","groupStacksBaseRoute","GroupStacksModule","stackExplorerBaseRoute","StackExplorerModule","subkeysBaseRoute","SubkeysModule","PaymentModule","support","TechResponseModule","PasswordModule","migrateRoute","MigrateModule","errorsRoute","ErrorsModule","coerce","Type","TypeError","concat","Object","defineProperty","exports","coerceArray","values","Array","isArray","default","LicenseType","Free","Startup","SmallTeam","LargeTeam","Professional","Enterprise","configOrBufferSize","windowTime","scheduler","config","bufferSize","refCount","source","lift","Number","POSITIVE_INFINITY","useRefCount","subject","subscription","hasError","isComplete","innerSub","err","undefined","complete","add","isTypeMatch","argument","type","String","Date","JSON","stringify","Function","Boolean","Symbol","__","throwError","argumentError","argumentString","_","argumentName","typeString","pattern","RegExp","ArgumentContracts","assertArray","every","item","assertString","trim","test","SubscriptionApiResponse","options","a","assertBoolean","restrictedUser","assertNumber","licensedVolume30Day","licensedVolume365Day","licensedNumberOfUsers","licensedNumberOfDatabases","assertArrayOf","availableSubscriptions","paymentType","assign","Math","round","freeze","PaymentType","None","Invoice","Card","TitleService","_titleSubject","_title$","asObservable","split","setTitle","getTitle","REQUEST_OPTIONS","withCredentials","SUBSCRIPTION_API_URL","SubscriptionService","_httpClient","get","response","companyId","delete","toPromise","volume","formData","FormData","append","toString","post"],"mappings":"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","file":"x","sourcesContent":["import { ErrorHandler, Injectable } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { AppRoute } from '@app/app-route';\r\nimport { Routes } from '@app/routes';\r\nimport { AuthenticatedUser } from '@common/services/authentication/authenticated-user/authenticated-user';\r\nimport { AuthenticationService } from '@common/services/authentication/authentication.service';\r\nimport { Database, UserAccessRights } from '@common/services/database-application-version/database';\r\nimport { DatabaseApplicationVersionService } from '@common/services/database-application-version/database-application-version.service';\r\nimport { ErrorInterceptorService } from '@common/services/error-redirect/error-redirect.service';\r\nimport { IntercomService } from '@common/services/intercom/intercom.service';\r\nimport { SubscriptionUpdatedService } from '@common/services/subscription-updated/subscription-updated.service';\r\nimport { LicenseType } from '@common/services/subscription/license-type';\r\nimport { SubscriptionService } from '@common/services/subscription/subscription.service';\r\nimport { TitleService } from '@common/services/title/title.service';\r\nimport { environment } from 'environments/environment';\r\nimport { combineLatest, from, Observable, of, Subject } from 'rxjs';\r\nimport { catchError, filter, map, shareReplay, startWith, switchMap, takeUntil, tap } from 'rxjs/operators';\r\nimport { ScreenRecordingService } from '../screen-recording.service';\r\nimport { AppLayoutViewModel } from './app-layout-view-model';\r\nimport { SubscriptionMessageOptions } from './subscription-message-options';\r\n\r\nconst EMPTY_SUBSCRIPTION_OPTIONS = <SubscriptionMessageOptions>{\r\n  licenseType: null,\r\n  licenseLockout: false,\r\n  licenseLimitExceeded: false,\r\n  trialDaysRemaining: 30,\r\n  licenseDaysTillLockout: 10000,\r\n  licensedDatabaseLimitExceeded: false,\r\n  licensedUserLimitExceeded: false,\r\n  licensedVolume30DayLimitExceeded: false,\r\n  licensedVolume365DayLimitExceeded: false\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppLayoutFacadeService {\r\n\r\n  private _viewModel$: Observable<AppLayoutViewModel>;\r\n  private _killAppLayoutSubject: Subject<void>;\r\n\r\n  constructor(\r\n    private _authService: AuthenticationService,\r\n    private _davService: DatabaseApplicationVersionService,\r\n    private _errorHandler: ErrorHandler,\r\n    private _intercomService: IntercomService,\r\n    private _router: Router,\r\n    private _screenRecordingService: ScreenRecordingService,\r\n    private _subscriptionService: SubscriptionService,\r\n    private _subscriptionUpdatedService: SubscriptionUpdatedService,\r\n    private _titleService: TitleService\r\n  ) {\r\n    this._killAppLayoutSubject = new Subject<void>();\r\n  }\r\n\r\n  get viewModel$(): Observable<AppLayoutViewModel> {\r\n    if (!this._viewModel$) {\r\n\r\n      const user = this._authService.getUserFromLocalStorage();\r\n      if (user?.email) {\r\n        this.startChat(user);\r\n        this.startRecording(user);\r\n      }\r\n\r\n      const database$ = from(this._davService.selectionUpdated()).pipe(switchMap(o => o), map(event => event.database));\r\n      const status$ = combineLatest([database$, this._subscriptionUpdatedService.refreshSubscription$])\r\n        .pipe(\r\n          switchMap(([database]) => this._subscriptionService.getSubscriptionStatus(database.name)),\r\n          startWith(EMPTY_SUBSCRIPTION_OPTIONS),\r\n          shareReplay(1),\r\n          takeUntil(this._killAppLayoutSubject),\r\n          catchError(error => {\r\n            this.sendBugSplatIfNot401(error);\r\n            return of(EMPTY_SUBSCRIPTION_OPTIONS);\r\n          })\r\n        );\r\n\r\n      const navigationEnd$ = this._router.events.pipe(filter(event => event instanceof NavigationEnd));\r\n      const lockoutRedirect$ = combineLatest([status$, navigationEnd$, of(user)])\r\n        .pipe(\r\n          tap(([status]) => {\r\n            if (status.licenseLockout && !this.isIgnoredRoute(this._router.url)) {\r\n              return this._router.navigate([`/${Routes.getAccountRoute(Routes.upgradeBaseRoute)}`]);\r\n            }\r\n          })\r\n        );\r\n\r\n      const accountRoute$ = this.createAppRoute$(database$, Routes.accountBaseRoute);\r\n      const crashesRoute$ = this.createAppRoute$(database$, Routes.allCrashBaseRoute);\r\n      const companyRoute$ = this.createAppRoute$(database$, Routes.companyBaseRoute);\r\n      const dashboardRoute$ = this.createAppRoute$(database$, Routes.dashboardBaseRoute);\r\n      const optionsRoute$ = this.createAppRoute$(database$, Routes.optionsBaseRoute);\r\n      const summaryRoute$ = this.createAppRoute$(database$, Routes.summaryBaseRoute);\r\n      const symbolsRoute$ = this.createAppRoute$(database$, Routes.symbolsBaseRoute);\r\n      const usersRoute$ = this.createAppRoute$(database$, Routes.usersBaseRoute);\r\n      const versionsRoute$ = this.createAppRoute$(database$, Routes.versionsRoute);\r\n      const passwordRoute$ = this.createAppRoute$(database$, Routes.passwordRoute);\r\n      const message$ = status$.pipe(map(status => this.createUpgradeMessage(status)), startWith(''));\r\n      const restrictedMenu$ = status$.pipe(map(status => status.licenseLockout), startWith(false));\r\n      const freeTrialDetails$ = status$.pipe(\r\n        map(({ licenseType, trialDaysRemaining }) => ({\r\n          trialDaysRemaining,\r\n          isFreeTrial: licenseType === LicenseType.Trial,\r\n        }))\r\n      );\r\n\r\n      const routes$ = combineLatest([accountRoute$, crashesRoute$, companyRoute$, dashboardRoute$, optionsRoute$, summaryRoute$, symbolsRoute$, usersRoute$, versionsRoute$, message$, passwordRoute$, restrictedMenu$, lockoutRedirect$])\r\n        .pipe(\r\n          map(([accountRoute, crashesRoute, companyRoute, dashboardRoute, optionsRoute, summaryRoute, symbolsRoute, usersRoute, versionsRoute, message, passwordRoute, restrictedMenu]) => (<AppLayoutViewModel>{\r\n            accountRoute,\r\n            crashesRoute,\r\n            companyRoute,\r\n            dashboardRoute,\r\n            optionsRoute,\r\n            summaryRoute,\r\n            symbolsRoute,\r\n            usersRoute,\r\n            versionsRoute,\r\n            message,\r\n            passwordRoute,\r\n            restrictedMenu\r\n          }))\r\n        );\r\n\r\n      const restricted$ = database$\r\n        .pipe(\r\n          map(database => {\r\n            return database.userAccessRights === UserAccessRights.Restricted\r\n              ? 'restricted'\r\n              : 'unrestricted';\r\n          })\r\n        );\r\n\r\n      const title$ = this._titleService.title$;\r\n\r\n      this._viewModel$ = combineLatest([routes$, of(user?.email), restricted$, title$, freeTrialDetails$])\r\n        .pipe(\r\n          map(([routes, user, restricted, title, freeTrialDetails]) => ({\r\n            ...routes,\r\n            user,\r\n            restricted,\r\n            title,\r\n            freeTrialDetails\r\n          }))\r\n        );\r\n    }\r\n\r\n    return this._viewModel$;\r\n  }\r\n\r\n  logout(): void {\r\n    this._intercomService.shutdown();\r\n    const route = environment.production ? '/auth0/logout' : '/logout';\r\n    location.href = new URL(route, environment.baseUrl).href;\r\n  }\r\n\r\n  onRouterOutletActivate(): void {\r\n    this._intercomService.update();\r\n  }\r\n\r\n  tearDown(): void {\r\n    this._killAppLayoutSubject?.next();\r\n    delete this._viewModel$;\r\n  }\r\n\r\n  private createAppRoute$(database$: Observable<Database>, route: string): Observable<AppRoute> {\r\n    return database$.pipe(map(database => {\r\n      return {\r\n        routerLink: [`/${route}`],\r\n        queryParams: {\r\n          database: database.name\r\n        }\r\n      };\r\n    }))\r\n  }\r\n\r\n  private async sendBugSplatIfNot401(error: Error): Promise<void> {\r\n    if (!ErrorInterceptorService.isUnauthorizedError(error)) {\r\n      await this._errorHandler.handleError(error);\r\n    }\r\n  }\r\n\r\n  private createUpgradeMessage(status: SubscriptionMessageOptions): string {\r\n\r\n    let message = '';\r\n\r\n    if (status.licenseLimitExceeded) {\r\n      if (status.licenseDaysTillLockout === 0) {\r\n        message = `Your team has exceeded the limits of your plan. Your account is locked`;\r\n      } else if (status.licensedDatabaseLimitExceeded) {\r\n        message = `Your team has exceeded your database limit. Please upgrade your account (${status.licenseDaysTillLockout} days remaining)`;\r\n      } else if (status.licensedUserLimitExceeded) {\r\n        message = `Your team has exceeded your user limit. Please upgrade your account (${status.licenseDaysTillLockout} days remaining)`;\r\n      } else if (status.licensedVolume30DayLimitExceeded) {\r\n        message = `Your team has exceeded your monthly crash volume limit. Please upgrade your account (${status.licenseDaysTillLockout} days remaining)`;\r\n      } else if (status.licensedVolume365DayLimitExceeded) {\r\n        message = `Your team has exceeded your yearly crash volume limit. Please upgrade your account (${status.licenseDaysTillLockout} days remaining)`;\r\n      }\r\n    } else if (status.licenseType === LicenseType.Trial && status.licenseDaysTillLockout <= 7) {\r\n      message = `Your team's trial period has ${status.licenseDaysTillLockout} days remaining`;\r\n    }\r\n\r\n    return message;\r\n  }\r\n\r\n  private isIgnoredRoute(route: string): boolean {\r\n    const isUsersPage = route.indexOf(`/${Routes.usersBaseRoute}`) === 0;\r\n    const isAccountPage = route.indexOf(`/${Routes.accountBaseRoute}`) === 0;\r\n    const isUpgradePage = route.indexOf(`/${Routes.upgradeBaseRoute}`) === 0;\r\n    const isCompanyDetailsPage = route.indexOf(`/${Routes.companyBaseRoute}`) === 0;\r\n    const isOptionsPage = route.indexOf(`/${Routes.optionsBaseRoute}`) === 0;\r\n    const isPaymentsPage = route.indexOf(`/${Routes.paymentBaseRoute}`) === 0;\r\n\r\n    return isUsersPage || isAccountPage || isUpgradePage || isCompanyDetailsPage || isOptionsPage || isPaymentsPage;\r\n  }\r\n\r\n  private startChat(user: AuthenticatedUser): void {\r\n    if (user.chat) {\r\n      this._intercomService.boot(user.email);\r\n    }\r\n  }\r\n\r\n  private startRecording(user: AuthenticatedUser): void {\r\n    if (user.recording) {\r\n      const w = <any>window;\r\n      const siteId = environment.luckyOrangeSiteId;\r\n      const email = user.email;\r\n\r\n      this._screenRecordingService.start(w, siteId, email);\r\n    }\r\n  }\r\n}\r\n","<div *ngIf=\"message\" class=\"alert-container\">\r\n  <div class=\"alert alert-size-fixed alert-center\">\r\n    <div class=\"subscription-alert\">\r\n      {{message}}. <a [routerLink]=\"accountRouterLink\" [queryParams]=\"queryParams\">Upgrade your plan</a>.\r\n    </div>\r\n  </div>\r\n</div>","import { Component, Input } from '@angular/core';\r\nimport { Routes } from '@app/routes';\r\n\r\n@Component({\r\n  selector: 'common-subscription-alert',\r\n  templateUrl: './subscription-alert.component.html',\r\n  styleUrls: ['./subscription-alert.component.scss']\r\n})\r\nexport class SubscriptionAlertComponent {  \r\n  @Input() database: string;\r\n  @Input() message: string;\r\n\r\n  public readonly accountRouterLink = [`/${Routes.accountBaseRoute}`];\r\n\r\n  get queryParams(): Object {\r\n    return {\r\n      database: this.database\r\n    };\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Routes } from '@app/routes';\r\n\r\n@Component({\r\n  selector: 'common-trial-countdown',\r\n  templateUrl: './trial-countdown.component.html',\r\n  styleUrls: ['./trial-countdown.component.scss'],\r\n})\r\nexport class TrialCountdownComponent {\r\n  @Input()\r\n  set daysRemaining(value: number) {\r\n    if (value === 1) {\r\n      this.message = '1 day remaining in trial';\r\n    } else if (value === 0) {\r\n      this.message = 'Your BugSplat trial ends today';\r\n    } else {\r\n      this.message = `${value} days remaining in trial`;\r\n    }\r\n  }\r\n  message: string;\r\n  upgradeLink: string[] = [Routes.accountBaseRoute];\r\n}\r\n","<div class=\"trial-message-container\">\r\n  <span>{{ message }}</span>&nbsp;\r\n  <a [routerLink]=\"upgradeLink\">Upgrade</a>\r\n</div>\r\n","<div class=\"header container-fluid\">\r\n  <header class=\"navbar navbar-dark navbar-fixed-top navbar-expand-md\">\r\n\r\n    <a class=\"navbar-brand\" href=\"https://www.bugsplat.com/\">\r\n      <img class=\"navbar-logo\" src=\"./assets/images/logo/bs-logo.svg\" alt=\"bugsplat logo\">\r\n    </a>\r\n\r\n    <div _ngcontent-cyb-c219=\"\" class=\"header-title\">\r\n      <h6 _ngcontent-cyb-c219=\"\" class=\"pl-lg-0 my-auto desktop-hidden\">\r\n        <div _ngcontent-cyb-c294=\"\" class=\"common-header-title mobile\">{{ viewModel?.title }}</div>\r\n      </h6>\r\n    </div>\r\n\r\n    <button class=\"navbar-toggler navbar-toggler-right\" type=\"button\" (click)=\"navbarCollapsed = !navbarCollapsed\"\r\n      [attr.aria-expanded]=\"!navbarCollapsed\" aria-controls=\"navbarContent\" aria-expanded=\"false\"\r\n      aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <ng-container *ngIf=\"!viewModel?.restrictedMenu; else restrictedMenu\">\r\n      <div class=\"navbar-collapse\" [ngbCollapse]=\"navbarCollapsed\" id=\"navbarContent\">\r\n        <ul class=\"navbar-nav pull-left\">\r\n          <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\r\n            <a class=\"nav-link mr-lg-3 ml-lg-3 mt-4 mt-md-0\" [routerLink]=\"viewModel?.dashboardRoute?.routerLink\"\r\n              [queryParams]=\"viewModel?.dashboardRoute?.queryParams\" (click)=\"collapseNavbar()\">Dashboard</a>\r\n          </li>\r\n          <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\r\n            <a class=\"nav-link mr-lg-3 ml-lg-3\" [routerLink]=\"viewModel?.crashesRoute?.routerLink\"\r\n              [queryParams]=\"viewModel?.crashesRoute?.queryParams\" (click)=\"collapseNavbar()\">Crashes</a>\r\n          </li>\r\n          <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\r\n            <a class=\"nav-link mr-lg-3 ml-lg-3\" [routerLink]=\"viewModel?.summaryRoute?.routerLink\"\r\n              [queryParams]=\"viewModel?.summaryRoute?.queryParams\" (click)=\"collapseNavbar()\">Summary</a>\r\n          </li>\r\n        </ul>\r\n        <ul class=\"navbar-nav ml-auto\">\r\n          <li *ngIf=\"viewModel?.freeTrialDetails?.isFreeTrial\" class=\"nav-item\">\r\n            <common-trial-countdown [daysRemaining]=\"viewModel?.freeTrialDetails?.trialDaysRemaining\"></common-trial-countdown>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <div class=\"d-inline-block\">\r\n              <button type=\"button\" class=\"btn btn-outline-link mt-0 mr-0 mr-lg-2 d-none d-md-block d-lg-block d-xl-block\"\r\n                placement=\"bottom\" data-html=\"true\"\r\n                ngbPopover=\"Let us know how we can improve using our support tool.  Click the blue circle in the bottom right of this screen and look for “Share your feedback”.\"\r\n                popoverTitle=\"We love feedback!\">\r\n                <i class=\"fa fa-bullhorn\"></i> Feedback\r\n              </button>\r\n            </div>\r\n          </li>\r\n          <li class=\"nav-item mr-1\" [routerLinkActive]=\"['active']\">\r\n            <a class=\"nav-link mr-lg-1 ml-lg-1 d-none d-md-block d-lg-block d-xl-block\"\r\n              href=\"https://www.bugsplat.com/docs\" (click)=\"collapseNavbar()\" placement=\"bottom\"\r\n              ngbTooltip=\"Visit Documents\" title=\"Visit Documents\"><i class=\"fa fa-life-ring mt-1\"></i></a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <div ngbDropdown class=\"d-inline-block mr-0 mr-md-2 mb-2 mb-lg-0 dropdown\">\r\n              <button class=\"btn\" id=\"navigationDropdown\" ngbDropdownToggle>\r\n                Settings\r\n              </button>\r\n              <div ngbDropdownMenu aria-labelledby=\"navigationDropdown\">\r\n                <div class=\"p-4 border-bottom\">\r\n                  <p class=\"mb-0 font-weight-bold overflow-hidden\">{{ viewModel?.user }}</p>\r\n                  <caption class=\"mt-0 pt-2 pb-0\">{{ viewModel?.restricted }}</caption>\r\n                </div>\r\n                <div class=\"pt-2 pb-2\">\r\n                  <a [routerLink]=\"viewModel?.optionsRoute?.routerLink\"\r\n                    [queryParams]=\"viewModel?.optionsRoute?.queryParams\"\r\n                    class=\"dropdown-item nav-dropdown-item\">Options</a>\r\n                  <a [routerLink]=\"viewModel?.versionsRoute?.routerLink\"\r\n                    [queryParams]=\"viewModel?.versionsRoute?.queryParams\"\r\n                    class=\"dropdown-item nav-dropdown-item\">Versions</a>\r\n                  <a [routerLink]=\"viewModel?.symbolsRoute?.routerLink\"\r\n                    [queryParams]=\"viewModel?.symbolsRoute?.queryParams\"\r\n                    class=\"dropdown-item nav-dropdown-item\">Symbols</a>\r\n                  <a [routerLink]=\"viewModel?.usersRoute?.routerLink\" [queryParams]=\"viewModel?.usersRoute?.queryParams\"\r\n                    class=\"dropdown-item nav-dropdown-item\">Users</a>\r\n                  <a [routerLink]=\"viewModel?.companyRoute?.routerLink\"\r\n                    [queryParams]=\"viewModel?.companyRoute?.queryParams\"\r\n                    class=\"dropdown-item nav-dropdown-item\">Company</a>\r\n                  <a [routerLink]=\"viewModel?.accountRoute?.routerLink\"\r\n                    [queryParams]=\"viewModel?.accountRoute?.queryParams\"\r\n                    class=\"dropdown-item nav-dropdown-item\">Account</a>\r\n                  <a [routerLink]=\"viewModel?.passwordRoute?.routerLink\"\r\n                    [queryParams]=\"viewModel?.passwordRoute?.queryParams\"\r\n                    class=\"dropdown-item nav-dropdown-item\">Password</a>\r\n                  <!-- Any way to ignore this logout for small screens @bobby? -->\r\n                  <a class=\"dropdown-item nav-dropdown-item\" [routerLink]=\"\" queryParamsHandling=\"preserve\" (click)=\"logout()\"><i class=\"fa fa-sign-out-alt pr-2\"></i>Logout</a>\r\n                </div>\r\n              </div>\r\n              <li class=\"d-xs-block d-sm-block d-md-none d-lg-none d-xl-none\" [routerLinkActive]=\"['active']\">\r\n                <a class=\"nav-link\"><i class=\"fa fa-sign-out-alt pr-2\"></i>Logout</a>\r\n              </li>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </ng-container>\r\n  </header>\r\n</div>\r\n<div class=\"body\">\r\n  <router-outlet (activate)=\"onRouterOutletActivate()\"></router-outlet>\r\n</div>\r\n<div class=\"subscription-alert-overlay\">\r\n  <common-subscription-alert [message]=\"viewModel?.message\"></common-subscription-alert>\r\n</div>\r\n<div class=\"footer\">\r\n  <common-app-footer></common-app-footer>\r\n</div>\r\n<ng-template #restrictedMenu>\r\n  <div class=\"navbar-collapse\" [ngbCollapse]=\"navbarCollapsed\" id=\"navbarContent\">\r\n    <ul class=\"navbar-nav ml-auto\">\r\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\r\n        <a class=\"nav-link\" [routerLink]=\"viewModel?.usersRoute?.routerLink\"\r\n          [queryParams]=\"viewModel?.usersRoute?.queryParams\" (click)=\"collapseNavbar()\">Users</a>\r\n      </li>\r\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\r\n        <a class=\"nav-link\" [routerLink]=\"viewModel?.companyRoute?.routerLink\"\r\n          [queryParams]=\"viewModel?.companyRoute?.queryParams\" (click)=\"collapseNavbar()\">Company</a>\r\n      </li>\r\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\r\n        <a class=\"nav-link\" [routerLink]=\"viewModel?.accountRoute?.routerLink\"\r\n          [queryParams]=\"viewModel?.accountRoute?.queryParams\" (click)=\"collapseNavbar()\">Account</a>\r\n      </li>\r\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\r\n        <a class=\"nav-link\" [routerLink]=\"viewModel?.optionsRoute?.routerLink\"\r\n          [queryParams]=\"viewModel?.optionsRoute?.queryParams\" (click)=\"collapseNavbar()\">Options</a>\r\n      </li>\r\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\r\n        <a class=\"nav-link\" href=\"https://www.bugsplat.com/docs\" (click)=\"collapseNavbar()\">Docs</a>\r\n      </li>\r\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\r\n        <a class=\"nav-link\" (click)=\"logout()\">Logout</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnDestroy } from '@angular/core';\r\nimport { TitleService } from '@common/services/title/title.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppLayoutFacadeService } from './services/app-layout-facade/app-layout-facade.service';\r\nimport { AppLayoutViewModel } from './services/app-layout-facade/app-layout-view-model';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './app-layout.component.html',\r\n  styleUrls: ['./app-layout.component.scss']\r\n})\r\nexport class AppLayoutComponent implements OnDestroy {\r\n  public viewModel?: AppLayoutViewModel;\r\n  public navbarCollapsed: boolean = true;\r\n  private _viewModelSubscription: Subscription;\r\n\r\n  constructor(private _appLayoutFacadeService: AppLayoutFacadeService, private _title: TitleService) {\r\n     // Async pipe and ngIf cannot be used here due to router outlet nested in asynchronously created container\r\n     this._viewModelSubscription = this._appLayoutFacadeService.viewModel$.subscribe(viewModel => this.viewModel = viewModel);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._viewModelSubscription?.unsubscribe();\r\n  }\r\n\r\n  collapseNavbar(): void {\r\n    this.navbarCollapsed = true;\r\n  }\r\n\r\n  logout(): void {\r\n    this.collapseNavbar();\r\n    this._appLayoutFacadeService.logout();\r\n  }\r\n\r\n  onRouterOutletActivate(): void {\r\n    this._appLayoutFacadeService.onRouterOutletActivate();\r\n  }\r\n}\r\n\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { Routes } from '@app/routes';\r\nimport { BugSplatCommonModule } from '@common/bugsplat-common.module';\r\nimport { AuthenticationGuardService } from '@common/services/authentication/authentication-guard.service';\r\nimport { AppLayoutComponent } from '@layout/app-layout/app-layout.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SubscriptionAlertComponent } from './components/subscription-alert/subscription-alert.component';\r\nimport { TrialCountdownComponent } from './components/trial-countdown/trial-countdown.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BugSplatCommonModule,\r\n    CommonModule,\r\n    NgbModule,\r\n    RouterModule.forChild([{\r\n      path: '',\r\n      component: AppLayoutComponent,\r\n      children: [{\r\n        path: Routes.adminBaseRoute,\r\n        canActivate: [AuthenticationGuardService],\r\n        loadChildren: () => import('@admin/admin.module').then(m => m.AdminModule)\r\n      },\r\n      {\r\n        path: Routes.accountBaseRoute,\r\n        canActivate: [AuthenticationGuardService],\r\n        loadChildren: () => import('@account/account.module').then(m => m.AccountModule)\r\n      },\r\n      {\r\n        path: 'company-details',\r\n        redirectTo: Routes.companyBaseRoute\r\n      },\r\n      {\r\n        path: Routes.companyBaseRoute,\r\n        canActivate: [AuthenticationGuardService],\r\n        loadChildren: () => import('@company-details/company-details.module').then(m => m.CompanyDetailsModule)\r\n      },\r\n      {\r\n        path: Routes.dashboardBaseRoute,\r\n        canActivate: [AuthenticationGuardService],\r\n        loadChildren: () => import('@dashboard/dashboard.module').then(m => m.DashboardModule)\r\n      },\r\n      {\r\n        path: 'crashdetails',\r\n        redirectTo: Routes.crashBaseRoute\r\n      },\r\n      {\r\n        path: Routes.crashBaseRoute,\r\n        canActivate: [AuthenticationGuardService],\r\n        loadChildren: () => import('@crash-details/crash-details.module').then(m => m.CrashDetailsModule)\r\n      },\r\n      {\r\n        path: Routes.keyCrashBaseRoute,\r\n        canActivate: [AuthenticationGuardService],\r\n        loadChildren: () => import('@key-crash/key-crash.module').then(m => m.KeyCrashModule)\r\n      },\r\n      {\r\n        path: 'allcrash',\r\n        redirectTo: Routes.allCrashBaseRoute\r\n      },\r\n      {\r\n        path: Routes.allCrashBaseRoute,\r\n        canActivate: [AuthenticationGuardService],\r\n        loadChildren: () => import('@all-crash/all-crash.module').then(m => m.AllCrashModule)\r\n      },\r\n      {\r\n        path: Routes.summaryBaseRoute,\r\n        canActivate: [AuthenticationGuardService],\r\n        loadChildren: () => import('@summary/summary.module').then(m => m.SummaryModule)\r\n      },\r\n      {\r\n        path: Routes.usersBaseRoute,\r\n        canActivate: [AuthenticationGuardService],\r\n        loadChildren: () => import('@users/users.module').then(m => m.UsersModule)\r\n      },\r\n      {\r\n        path: Routes.symbolsBaseRoute,\r\n        canActivate: [AuthenticationGuardService],\r\n        loadChildren: () => import('@symbols/symbols.module').then(m => m.SymbolsModule)\r\n      },\r\n      {\r\n        path: Routes.symbolDetailsBaseRoute,\r\n        canActivate: [AuthenticationGuardService],\r\n        loadChildren: () => import('@symbol-details/symbol-details.module').then(m => m.SymbolDetailsModule)\r\n      },\r\n      {\r\n        path: Routes.upgradeBaseRoute,\r\n        canActivate: [AuthenticationGuardService],\r\n        redirectTo: `${Routes.getAccountRoute('upgrade')}`\r\n      },\r\n      {\r\n        path: Routes.versionsRoute,\r\n        canActivate: [AuthenticationGuardService],\r\n        loadChildren: () => import('@versions/versions.module').then(m => m.VersionsModule)\r\n      },\r\n      {\r\n        path: Routes.optionsBaseRoute,\r\n        canActivate: [AuthenticationGuardService],\r\n        loadChildren: () => import('@options/options.module').then(m => m.OptionsModule)\r\n      },\r\n      {\r\n        path: Routes.groupStacksBaseRoute,\r\n        canActivate: [AuthenticationGuardService],\r\n        loadChildren: () => import('@group-stacks/group-stacks.module').then(m => m.GroupStacksModule)\r\n      },\r\n      {\r\n        path: Routes.stackExplorerBaseRoute,\r\n        canActivate: [AuthenticationGuardService],\r\n        loadChildren: () => import('@stack-explorer/stack-explorer.module').then(m => m.StackExplorerModule)\r\n      },\r\n      {\r\n        path: Routes.subkeysBaseRoute,\r\n        canActivate: [AuthenticationGuardService],\r\n        loadChildren: () => import('@subkeys/subkeys.module').then(m => m.SubkeysModule)\r\n      },\r\n      {\r\n        path: Routes.paymentBaseRoute,\r\n        canActivate: [AuthenticationGuardService],\r\n        loadChildren: () => import('@payment/payment.module').then(m => m.PaymentModule)\r\n      },\r\n      {\r\n        path: Routes.support,\r\n        canActivate: [AuthenticationGuardService],\r\n        loadChildren: () => import('@support/tech-response.module').then(m => m.TechResponseModule)\r\n      },\r\n      {\r\n        path: Routes.passwordRoute,\r\n        canActivate: [AuthenticationGuardService],\r\n        loadChildren: () => import('@password/password.module').then(m => m.PasswordModule)\r\n      },\r\n      {\r\n        path: Routes.migrateRoute,\r\n        canActivate: [AuthenticationGuardService],\r\n        loadChildren: () => import('@migrate/migrate.module').then(m => m.MigrateModule)\r\n      },\r\n      {\r\n        path: Routes.errorsRoute,\r\n        canActivate: [AuthenticationGuardService],\r\n        loadChildren: () => import('@errors/errors.module').then(m => m.ErrorsModule)\r\n      }]\r\n    }\r\n  ])\r\n  ],\r\n  declarations: [\r\n    AppLayoutComponent,\r\n    SubscriptionAlertComponent,\r\n    TrialCountdownComponent\r\n  ]\r\n})\r\nexport class AppLayoutModule { }\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.coerce = coerce;\nexports.coerceArray = coerceArray;\nexports.default = void 0;\n\n/**\n * Validate an object is an instance of the expected type, or is a valid constructor object for the requested type\n * @param {*} value - The value for validation\n * @param {*} Type - The type for instance of comparison\n * @param {string} message - The message to be displayed if coercion fails\n * @returns {*} - Instance of provided Type\n * @throws {TypeError} - If the value is not coercable.\n */\nfunction coerce(value, Type, message) {\n  if (value instanceof Type) {\n    return value;\n  }\n\n  try {\n    return new Type(value);\n  } catch (error) {\n    throw new TypeError(\"\".concat(message, \" Inner Error: \").concat(error.message));\n  }\n}\n\nvar _default = coerce;\n/**\n * Validate an array of objects are an instance of the expected type, or are a valid constructor object for the requested type\n * @param {Array<*>} values - The array of values for validation\n * @param {*} Type - The type for instance of comparison\n * @param {string} message - The message to be displayed if coercion fails\n * @returns {Array<*>} - Array of instances of provided Type\n * @throws {TypeError} - If values is not an array\n * @throws {TypeError} - One of the array values is not coercable.\n */\n\nexports.default = _default;\n\nfunction coerceArray(values, Type, message) {\n  if (!Array.isArray(values)) {\n    throw new TypeError(\"values must be an Array. Provided value: \".concat(values));\n  }\n\n  return values.map(function (value) {\n    return coerce(value, Type, message);\n  });\n}","export enum LicenseType {\r\n  Trial = \"BS-Trial\",\r\n  Free = \"BS-FreeTier\",\r\n  Startup = \"BS-StartUp15k\",\r\n  SmallTeam = \"BS-SmallTeam50k\",\r\n  LargeTeam = \"BS-LargerTeam100k\",\r\n  Professional = \"BS-Professional250k\",\r\n  Enterprise = \"BS-Enterprise\"\r\n}","import { ReplaySubject } from '../ReplaySubject';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n    let config;\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        config = configOrBufferSize;\n    }\n    else {\n        config = {\n            bufferSize: configOrBufferSize,\n            windowTime,\n            refCount: false,\n            scheduler\n        };\n    }\n    return (source) => source.lift(shareReplayOperator(config));\n}\nfunction shareReplayOperator({ bufferSize = Number.POSITIVE_INFINITY, windowTime = Number.POSITIVE_INFINITY, refCount: useRefCount, scheduler }) {\n    let subject;\n    let refCount = 0;\n    let subscription;\n    let hasError = false;\n    let isComplete = false;\n    return function shareReplayOperation(source) {\n        refCount++;\n        let innerSub;\n        if (!subject || hasError) {\n            hasError = false;\n            subject = new ReplaySubject(bufferSize, windowTime, scheduler);\n            innerSub = subject.subscribe(this);\n            subscription = source.subscribe({\n                next(value) { subject.next(value); },\n                error(err) {\n                    hasError = true;\n                    subject.error(err);\n                },\n                complete() {\n                    isComplete = true;\n                    subscription = undefined;\n                    subject.complete();\n                },\n            });\n        }\n        else {\n            innerSub = subject.subscribe(this);\n        }\n        this.add(() => {\n            refCount--;\n            innerSub.unsubscribe();\n            if (subscription && !isComplete && useRefCount && refCount === 0) {\n                subscription.unsubscribe();\n                subscription = undefined;\n                subject = undefined;\n            }\n        });\n    };\n}\n//# sourceMappingURL=shareReplay.js.map","import coerce from '@meltwater/coerce';\nfunction isTypeMatch(argument, type) {\n    if (type == Array) {\n        return Array.isArray(argument);\n    }\n    if (type == String) {\n        return typeof argument == 'string' || argument instanceof String;\n    }\n    if (type == Number) {\n        return typeof argument == 'number' || argument instanceof Number;\n    }\n    if (type == Date) {\n        return (argument instanceof Date || argument) && JSON.stringify(new Date(argument)) !== 'null';\n    }\n    if (type == Function) {\n        return typeof argument == 'function' || argument instanceof Function;\n    }\n    if (type == Object) {\n        return argument !== null && typeof argument == 'object';\n    }\n    if (type == Boolean) {\n        return typeof argument == 'boolean';\n    }\n    if (typeof Symbol != 'undefined' && type == Symbol) {\n        return typeof argument == 'symbol';\n    }\n    try {\n        coerce(argument, type, '');\n        return true;\n    }\n    catch (__) {\n        return false;\n    }\n}\nfunction throwError(argumentError) {\n    let argumentString;\n    try {\n        argumentString = JSON.stringify(argumentError.argument);\n    }\n    catch (_) {\n        argumentString = argumentError.argument;\n    }\n    throw new TypeError(`Expected ${argumentError.argumentName || 'argument'} to be ${argumentError.typeString}. Value received: ${argumentString}`);\n}\nconst pattern = new RegExp('^(https?:\\\\/\\\\/)?' +\n    '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' +\n    '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' +\n    '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' +\n    '(\\\\?[:;&a-z\\\\d%_.,~+=-]*)?' +\n    '(\\\\#[-a-z\\\\d_]*)?$', 'i');\nfunction validUrl(str) {\n    return pattern.test(str);\n}\nexport default class ArgumentContracts {\n    static assertArray(argument, argumentName) {\n        if (!isTypeMatch(argument, Array)) {\n            throwError({ argument, argumentName, typeString: 'an array' });\n        }\n    }\n    static assertArrayOf(argument, type, argumentName) {\n        ArgumentContracts.assertArray(argument, argumentName);\n        if (!argument.every(item => isTypeMatch(item, type))) {\n            throwError({ argument, argumentName, typeString: `an array of ${type}` });\n        }\n    }\n    static assertBoolean(argument, argumentName) {\n        if (!isTypeMatch(argument, Boolean)) {\n            throwError({ argument, argumentName, typeString: 'a boolean' });\n        }\n    }\n    static assertDate(argument, argumentName) {\n        if (!isTypeMatch(argument, Date)) {\n            throwError({ argument, argumentName, typeString: 'a boolean' });\n        }\n    }\n    static assertFunction(argument, argumentName) {\n        if (!isTypeMatch(argument, Function)) {\n            throwError({ argument, argumentName, typeString: 'a function' });\n        }\n    }\n    static assertNotNil(argument, argumentName) {\n        if (argument == null) {\n            throwError({ argument, argumentName, typeString: 'not null or undefined' });\n        }\n    }\n    static assertNonWhiteSpaceString(argument, argumentName) {\n        ArgumentContracts.assertString(argument, argumentName);\n        if (argument.trim() === '') {\n            throwError({ argument, argumentName, typeString: 'a non white space string' });\n        }\n    }\n    static assertNumber(argument, argumentName) {\n        if (!isTypeMatch(argument, Number)) {\n            throwError({ argument, argumentName, typeString: 'a number' });\n        }\n    }\n    static assertObject(argument, argumentName) {\n        if (!isTypeMatch(argument, Object)) {\n            throwError({ argument, argumentName, typeString: 'an object' });\n        }\n    }\n    static assertString(argument, argumentName) {\n        if (!isTypeMatch(argument, String)) {\n            throwError({ argument, argumentName, typeString: 'a string' });\n        }\n    }\n    static assertSymbol(argument, argumentName) {\n        if (!isTypeMatch(argument, Symbol)) {\n            throwError({ argument, argumentName, typeString: 'a symbol' });\n        }\n    }\n    static assertType(argument, type, argumentName) {\n        if (!isTypeMatch(argument, type)) {\n            throwError({ argument, argumentName, typeString: `a ${type}` });\n        }\n    }\n    static assertUrl(argument, argumentName) {\n        this.assertString(argument, argumentName);\n        if (!validUrl(argument)) {\n            throwError({ argument, argumentName, typeString: 'a url' });\n        }\n    }\n}\n","import ac from 'argument-contracts/esm';\r\nimport { LicenseType } from './license-type';\r\n\r\nexport interface SubscriptionApiResponseConstructorOptions {\r\n  restrictedUser: boolean;\r\n  licenseType: LicenseType;\r\n  licenseLockout: boolean;\r\n  licenseLimitExceeded: boolean;\r\n  licensedVolume30DayLimitExceeded: boolean;\r\n  licensedVolume365DayLimitExceeded: boolean;\r\n  licensedDatabaseLimitExceeded: boolean;\r\n  licensedUserLimitExceeded: boolean;\r\n  licensedVolume30Day: number;\r\n  licensedVolume365Day: number;\r\n  licensedNumberOfUsers: number;\r\n  licensedNumberOfDatabases: number;\r\n  licenseDaysTillLockout: number;\r\n  availableSubscriptions: Array<LicenseType>;\r\n  paymentType: PaymentType;\r\n  trialDaysRemaining: number;\r\n}\r\n\r\nexport class SubscriptionApiResponse {\r\n  restrictedUser: boolean;\r\n  licenseType: LicenseType;\r\n  licenseLockout: boolean;\r\n  licenseLimitExceeded: boolean;\r\n  licensedVolume30DayLimitExceeded: boolean;\r\n  licensedVolume365DayLimitExceeded: boolean;\r\n  licensedDatabaseLimitExceeded: boolean;\r\n  licensedUserLimitExceeded: boolean;\r\n  licensedVolume30Day: number;\r\n  licensedVolume365Day: number;\r\n  licensedNumberOfUsers: number;\r\n  licensedNumberOfDatabases: number;\r\n  licenseDaysTillLockout: number;\r\n  availableSubscriptions: Array<LicenseType>;\r\n  paymentType: PaymentType\r\n  trialDaysRemaining: number;\r\n\r\n  constructor(options: SubscriptionApiResponseConstructorOptions) {\r\n    ac.assertBoolean(options.restrictedUser);\r\n    ac.assertString(options.licenseType);\r\n    ac.assertBoolean(options.licenseLockout);\r\n    ac.assertBoolean(options.licenseLimitExceeded);\r\n    ac.assertBoolean(options.licensedVolume30DayLimitExceeded);\r\n    ac.assertBoolean(options.licensedVolume365DayLimitExceeded);\r\n    ac.assertBoolean(options.licensedDatabaseLimitExceeded);\r\n    ac.assertBoolean(options.licensedUserLimitExceeded);\r\n    ac.assertNumber(options.licensedVolume30Day);\r\n    ac.assertNumber(options.licensedVolume365Day);\r\n    ac.assertNumber(options.licensedNumberOfUsers);\r\n    ac.assertNumber(options.licensedNumberOfDatabases);\r\n    ac.assertNumber(options.licenseDaysTillLockout);\r\n    ac.assertArrayOf(options.availableSubscriptions, String);\r\n    ac.assertNumber(options.paymentType);\r\n\r\n    Object.assign(this, {\r\n      ...options,\r\n      licensedVolume30Day: Math.round(options.licensedVolume30Day),\r\n      licensedVolume365Day: Math.round(options.licensedVolume365Day),\r\n      licensedNumberOfUsers: Math.round(options.licensedNumberOfUsers),\r\n      licensedNumberOfDatabases: Math.round(options.licensedNumberOfDatabases),\r\n      licenseDaysTillLockout: Math.round(options.licenseDaysTillLockout)\r\n    });\r\n\r\n    Object.freeze(this);\r\n  }\r\n}\r\n\r\nexport enum PaymentType {\r\n  None = 0,\r\n  Invoice = 1,\r\n  Card = 2,\r\n}","import { Injectable } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { delay, map, shareReplay } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TitleService {\r\n\r\n  private _title$: Observable<string>;\r\n  private _titleSubject: Subject<string>;\r\n\r\n  get title$(): Observable<string> {\r\n    if (!this._title$) {\r\n      this._title$ = this._titleSubject\r\n        .asObservable()\r\n        .pipe(\r\n          delay(0), // Fix expression changed after checked issue due to this being called from ngOnInit\r\n          map(title => title.split('|')[0].trim()),\r\n          shareReplay(1)\r\n        );\r\n    }\r\n\r\n    return this._title$;\r\n  }\r\n\r\n  constructor(private _title: Title) {\r\n    this._titleSubject = new Subject();\r\n  }\r\n\r\n  setTitle(title: string): void {\r\n    this._title.setTitle(title);\r\n    this._titleSubject.next(title);\r\n  }\r\n\r\n  getTitle(): string {\r\n    return this._title.getTitle();\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { SubscriptionApiResponse } from './subscription-api-response';\r\n\r\n\r\nconst REQUEST_OPTIONS = {\r\n  withCredentials: true\r\n};\r\n\r\nconst SUBSCRIPTION_API_URL = `${environment.baseUrl}/api/subscription.php`;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SubscriptionService {\r\n\r\n  constructor(private _httpClient: HttpClient) { }\r\n\r\n  getSubscriptionStatus(database: string): Observable<SubscriptionApiResponse> {\r\n    const url = `${SUBSCRIPTION_API_URL}?database=${database}`;\r\n    \r\n    return this._httpClient.get(url, REQUEST_OPTIONS)\r\n      .pipe(map(response => new SubscriptionApiResponse(<any>response)));\r\n  }\r\n\r\n  getSubscriptionStatusByCompanyId(companyId: number): Observable<SubscriptionApiResponse> {\r\n    const url = `${SUBSCRIPTION_API_URL}?companyId=${companyId}`;\r\n    \r\n    return this._httpClient.get(url, REQUEST_OPTIONS)\r\n      .pipe(map(response => new SubscriptionApiResponse(<any>response)));\r\n  }\r\n\r\n  async deleteSubscription(companyId: number): Promise<object> {\r\n    return this._httpClient\r\n      .delete(`${SUBSCRIPTION_API_URL}?companyId=${companyId}`, REQUEST_OPTIONS)\r\n      .toPromise()\r\n  }\r\n\r\n  async updateSubscription(companyId: number, volume: number): Promise<object> {\r\n    const formData = new FormData();\r\n    formData.append('companyId', companyId.toString());\r\n    formData.append('volume', volume.toString());\r\n\r\n    return this._httpClient.post(SUBSCRIPTION_API_URL, formData, REQUEST_OPTIONS).toPromise();\r\n  }\r\n}\r\n"]}